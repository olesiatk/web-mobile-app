{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","onEnterPage","setOnEnterPage","onSignInPage","setOnSignInPage","onSignUpPage","setOnSignUpPage","onMainPage","setOnMainPage","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","openedHelp","setOpenedHelp","wrongEmail","setWrongEmail","wrongPassword","setWrongPassword","wrongConfirm","setWrongConfirm","noUser","setNoUser","hideButton","setHideButton","typeOfPasword","setTypeOfPasword","typeOfConfirm","setTypeOfConfirm","goToSignUp","goToSignIn","goToMain","validEmail","includes","validPassword","test","addUser","validConfirm","window","localStorage","setItem","useEffect","checkUser","getItem","showPassword","showConfirm","className","onClick","onSubmit","event","preventDefault","type","placeholder","value","onChange","e","target","classNames","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c404cd31.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport classNames from 'classnames';\nimport './App.css';\n\nfunction App() {\n  const [onEnterPage, setOnEnterPage] = useState(true);\n  const [onSignInPage, setOnSignInPage] = useState(false);\n  const [onSignUpPage, setOnSignUpPage] = useState(false);\n  const [onMainPage, setOnMainPage] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('12345678');\n  const [confirmPassword, setConfirmPassword] = useState('12345678');\n  const [openedHelp, setOpenedHelp] = useState(false);\n  const [wrongEmail, setWrongEmail] = useState(false);\n  const [wrongPassword, setWrongPassword] = useState(false);\n  const [wrongConfirm, setWrongConfirm] = useState(false);\n  const [noUser, setNoUser] = useState(false);\n  const [hideButton, setHideButton] = useState(false);\n  const [typeOfPasword, setTypeOfPasword] = useState('password');\n  const [typeOfConfirm, setTypeOfConfirm] = useState('password');\n\n\n  const goToSignUp = () => {\n    setOnEnterPage(false);\n    setOnSignInPage(false);\n    setOnMainPage(false);\n    setOnSignUpPage(true);\n    setTypeOfPasword('password');\n    setTypeOfConfirm('password');\n  }\n\n  const goToSignIn = () => {\n    setOnSignUpPage(false);\n    setOnEnterPage(false);\n    setOnMainPage(false);\n    setOnSignInPage(true);\n    setTypeOfPasword('password');\n  }\n\n  const goToMain = () => {\n    setOnSignUpPage(false);\n    setOnEnterPage(false);\n    setOnSignInPage(false);\n    setOnMainPage(true);\n  }\n\n  const validEmail = (email) => {\n    if (email.includes('@')){\n      return true;\n    }\n    \n    setWrongEmail(true);\n    return false;\n  }\n\n  const validPassword = (password) => {\n    const RegExp = /^(?=.*[!@#$%^&*])(?=.*[A-Z]{2})[a-zA-Z0-9!@#$%^&*]{8}$/;\n    if (RegExp.test(password)){\n      return true;\n    }\n    setWrongPassword(true)\n    return false;\n  }\n\n  const validConfirm = (confirmPassword) => {\n    if (password===confirmPassword){\n      return true;\n    }\n    setWrongConfirm(true)\n    return false;\n  }\n\n  const addUser = () => {\n    if (validEmail(email) && validPassword(password) && validConfirm(confirmPassword)) {\n      window.localStorage.setItem('name', name);\n      window.localStorage.setItem('email', email);\n      window.localStorage.setItem('password', password);\n      goToMain();\n    } else {\n      setHideButton(true);\n    }\n  }\n\n  useEffect(() => {\n    setHideButton(false);\n  }, [email, password, confirmPassword])\n\n  const wrongUser = () => {\n    setNoUser(true);\n    setWrongEmail(true);\n    setWrongPassword(true);\n  }\n\n  const checkUser = () => {\n    if (validEmail(email) && validPassword(password)){\n      if (window.localStorage.getItem('email') === email \n      && window.localStorage.getItem('password') === password ) {\n        goToMain();\n        return;\n      }\n    }\n    wrongUser();\n    setHideButton(true);\n    return;\n  }\n\n\n  const clearErrors = () => {\n    setWrongEmail(false);\n    setWrongPassword(false);\n    setNoUser(false);\n    setTypeOfPasword('password');\n  }\n\n  const showPassword = () => {\n    if (typeOfPasword === 'password') {\n      setTypeOfPasword('text')\n    } else {\n      setTypeOfPasword('password');\n    }\n  }\n\n  const showConfirm = () => {\n    if (typeOfConfirm === 'password') {\n      setTypeOfConfirm('text')\n    } else {\n      setTypeOfConfirm('password');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {onEnterPage && (\n        <section className=\"App__page-enter\">\n          <h1 className=\"App__header\">Ready for a great User experiance?</h1>\n          <p className=\"App__text-info\"> Bring your media to the next level!</p>\n          <button \n            className=\"App__button\"\n            onClick={() => {goToSignUp()}}\n          >\n            SignUp\n          </button>\n          <button \n            className=\"App__button-go\"\n            onClick={() => {goToSignIn()}}\n          >\n            &rarr;\n          </button>\n        </section>\n      )}\n\n      {onSignUpPage && (\n        <section className=\"App__page-signUP\">\n          <h1 className=\"App__header\">Sign Up</h1>\n          <form \n            className=\"App__form\"\n            onSubmit={(event) => {\n              event.preventDefault();\n              addUser();\n            }}\n          >\n            <label className=\"App__label\">\n              <p className=\"App__label-text\">Full name</p>\n              <input \n                className=\"App__input\" \n                name=\"name\" \n                type=\"text\" \n                placeholder=\"John Doe\" \n                value={name} \n                onChange={(e)=>setName(e.target.value)}\n              />\n            </label>\n            <label className=\"App__label\">\n              <p \n                className={classNames(\"App__label-text\",{\"wrong-email\": wrongEmail})}\n              >\n                Email\n              </p>\n              <input\n                className={classNames(\"App__input\", {\"wrong-input\": wrongEmail})}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"example@acme.com\" \n                value={email} \n                onChange={(e)=>setEmail(e.target.value)}\n              />\n            </label>\n            <label className=\"App__label\">\n              <div className=\"App__lable-password\">\n                <p className=\"App__label-text\">Password</p>\n                <div \n                  className={classNames(\"App__help\", {\"App__help--active\": openedHelp})}\n                  onClick={() => setOpenedHelp(!openedHelp)}\n                >\n                  ?\n                </div>\n              </div>\n              <input \n                className={classNames(\"App__input\", {\"wrong-input\": wrongPassword})}\n                name=\"password\" \n                type={typeOfPasword}\n                placeholder=\"\" \n                value={password} \n                onChange={(e)=>setPassword(e.target.value)}\n              />\n              {typeOfPasword==='password' \n                ? (<i \n                    className=\"eye fa fa-eye\" \n                    onClick = {() => showPassword()}\n                  />)\n                : (<i \n                    className=\"eye fa fa-eye-slash\" \n                    onClick = {() => showPassword()}\n                  />)\n              }\n            </label>\n            <label className=\"App__label\">\n              <p className=\"App__label-text\">Repeat password</p>\n              <input \n                className={classNames(\"App__input\", {\"wrong-input\": wrongConfirm})} \n                name=\"password\" \n                type={typeOfConfirm} \n                placeholder=\"********\" \n                value={confirmPassword} \n                onChange={(e)=>setConfirmPassword(e.target.value)}\n              />\n              {typeOfConfirm==='password' \n                ? (<i \n                    className=\"eye fa fa-eye\" \n                    onClick = {() => showConfirm()}\n                  />)\n                : (<i \n                    className=\"eye fa fa-eye-slash\" \n                    onClick = {() => showConfirm()}\n                  />)\n              }\n            </label>\n\n            <button \n              className={classNames(\"App__form-button\", {\"not-active\": hideButton})}\n              type=\"submit\"\n            >\n              Sign Up\n            </button>\n          </form>\n          <p className=\"App__text-question\"> Already have an account?</p>\n          <button \n            className=\" App__text-question App__button-link\"\n            onClick={() => {goToSignIn()}}\n          >\n            Sign In\n          </button>\n        </section>\n      )}\n\n      {onSignInPage && (\n        <section className=\"App__page-signIN\">\n          <h1 className=\"App__header\">Sign In</h1>\n          <form \n            className=\"App__form\"\n            onSubmit={(event) => {\n              event.preventDefault();\n              checkUser();\n            }}\n          >\n            <label className=\"App__label\">\n              <p className=\"App__label-text\">Email</p>\n              <input\n                className={classNames(\"App__input\", {\"wrong-input\": wrongEmail})}\n                name=\"email\"\n                type=\"email\" \n                placeholder=\"example@acme.com\" \n                value={email} \n                onChange={(e)=>setEmail(e.target.value)}></input>\n            </label>\n            <label className=\"App__label\">\n              <p className=\"App__label-text\">Password</p>\n              <input \n                className={classNames(\"App__input\", {\"wrong-input\": wrongPassword})}\n                type={typeOfPasword} \n                placeholder=\"********\" \n                value={password} \n                onChange={(e)=>setPassword(e.target.value)}\n              />\n              {typeOfPasword==='password' \n                ? (<i \n                    className=\"eye fa fa-eye\" \n                    onClick = {() => showPassword()}\n                  />)\n                : (<i \n                    className=\"eye fa fa-eye-slash\" \n                    onClick = {() => showPassword()}\n                  />)\n              }\n            </label>\n            <button \n              className={classNames(\"App__form-button\", {\"not-active\": hideButton})}\n              type=\"submit\"\n            >\n              Sign In\n            </button>\n          </form>\n          <p className=\"App__text-question\"> Don't have an account yet?</p>\n          <button \n            href='.' \n            className=\" App__text-question App__button-link\"\n            onClick={() => {goToSignUp()}}\n          >Sign Up</button>\n\n          {noUser && (\n            <div className=\"App__error\">\n              Wrong email or password\n              <span \n                className=\"App__error-close\"\n                onClick = {() => clearErrors()}\n              >\n                &#10006;\n              </span>\n            </div>\n          )}\n\n        </section>\n      )}\n\n      {onMainPage && (\n        <section className=\"App__page-main\">\n          <h1 className=\"App__header\">Hello, {localStorage.getItem('name')}!</h1>\n        </section>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}