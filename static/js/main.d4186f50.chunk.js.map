{"version":3,"sources":["components/Enter.js","components/Eye.js","components/SignUp.js","components/SignIn.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Enter","goToSignUp","goToSignIn","className","type","onClick","Eye","typeOfPasword","showPassword","aria-hidden","SignUp","name","email","password","confirmPassword","hideButton","setName","setEmail","setPassword","setConfirmPassword","setHideButton","wrongEmail","wrongPassword","wrongConfirm","addUser","useState","setTypeOfPasword","typeOfConfirm","setTypeOfConfirm","openedHelp","setOpenedHelp","useEffect","onSubmit","event","preventDefault","placeholder","value","onChange","e","target","classNames","SignIn","setWrongEmail","setWrongPassword","noUser","setNoUser","checkUser","Main","localStorage","getItem","App","onEnterPage","setOnEnterPage","onSignInPage","setOnSignInPage","onSignUpPage","setOnSignUpPage","onMainPage","setOnMainPage","setWrongConfirm","goToMain","validEmail","inputEmail","includes","validPassword","inputPassword","test","window","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4186f50.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Enter = ({ goToSignUp, goToSignIn }) => (\n  <section className=\"App__page-enter\">\n    <h1 className=\"App__header\">Ready for a great User experiance?</h1>\n    <p className=\"App__text-info\"> Bring your media to the next level!</p>\n    <button\n      type=\"button\"\n      className=\"App__button\"\n      onClick={() => goToSignUp()}\n    >\n      SignUp\n    </button>\n    <button\n      type=\"button\"\n      className=\"App__button-go\"\n      onClick={() => goToSignIn()}\n    >\n      &rarr;\n    </button>\n  </section>\n);\n\nEnter.propTypes = {\n  goToSignUp: PropTypes.string.isRequired,\n  goToSignIn: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Eye = ({ typeOfPasword, showPassword }) => (\n  <>\n    {typeOfPasword === 'password'\n      ? (\n        <i\n          className=\"eye fa fa-eye\"\n          onClick={() => showPassword()}\n          aria-hidden=\"true\"\n        />\n      )\n      : (\n        <i\n          className=\"eye fa fa-eye-slash\"\n          onClick={() => showPassword()}\n          aria-hidden=\"true\"\n        />\n      )\n    }\n  </>\n);\n\nEye.propTypes = {\n  typeOfPasword: PropTypes.string.isRequired,\n  showPassword: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Eye } from './Eye';\n\nexport const SignUp = ({\n  name,\n  email,\n  password,\n  confirmPassword,\n  hideButton,\n  setName,\n  setEmail,\n  setPassword,\n  setConfirmPassword,\n  setHideButton,\n  wrongEmail,\n  wrongPassword,\n  wrongConfirm,\n  addUser,\n  goToSignIn,\n}) => {\n  const [typeOfPasword, setTypeOfPasword] = useState('password');\n  const [typeOfConfirm, setTypeOfConfirm] = useState('password');\n  const [openedHelp, setOpenedHelp] = useState(false);\n\n  useEffect(() => {\n    setHideButton(false);\n  }, [email, password, confirmPassword, setHideButton]);\n\n  const showPassword = () => {\n    if (typeOfPasword === 'password') {\n      setTypeOfPasword('text');\n    } else {\n      setTypeOfPasword('password');\n    }\n  };\n\n  const showConfirm = () => {\n    if (typeOfConfirm === 'password') {\n      setTypeOfConfirm('text');\n    } else {\n      setTypeOfConfirm('password');\n    }\n  };\n\n  return (\n    <section className=\"App__page-signUP\">\n      <h1 className=\"App__header\">Sign Up</h1>\n      <form\n        className=\"App__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addUser();\n        }}\n      >\n        <label className=\"App__label\">\n          <p className=\"App__label-text\">Full name</p>\n          <input\n            className=\"App__input\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"John Doe\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </label>\n        <label className=\"App__label\">\n          <p\n            className={classNames(\n              'App__label-text',\n              { 'wrong-email': wrongEmail },\n            )}\n          >\n            Email\n          </p>\n          <input\n            className={classNames('App__input', { 'wrong-input': wrongEmail })}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"example@acme.com\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </label>\n        <label className=\"App__label\">\n          <div className=\"App__lable-password\">\n            <p className=\"App__label-text\">Password</p>\n            <div\n              className={classNames(\n                'App__help',\n                { 'App__help--active': openedHelp },\n              )}\n              onClick={() => setOpenedHelp(!openedHelp)}\n              aria-hidden=\"true\"\n            >\n              ?\n            </div>\n          </div>\n          <input\n            className={classNames(\n              'App__input',\n              { 'wrong-input': wrongPassword },\n            )}\n            name=\"password\"\n            type={typeOfPasword}\n            placeholder=\"\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n          <Eye\n            typeOfPasword={typeOfPasword}\n            showPassword={showPassword}\n          />\n        </label>\n        <label className=\"App__label\">\n          <p className=\"App__label-text\">Repeat password</p>\n          <input\n            className={classNames(\n              'App__input',\n              { 'wrong-input': wrongConfirm },\n            )}\n            name=\"password\"\n            type={typeOfConfirm}\n            placeholder=\"********\"\n            value={confirmPassword}\n            onChange={e => setConfirmPassword(e.target.value)}\n          />\n          <Eye\n            typeOfPasword={typeOfConfirm}\n            showPassword={showConfirm}\n          />\n        </label>\n\n        <button\n          className={classNames(\n            'App__form-button',\n            { 'not-active': hideButton },\n          )}\n          type=\"submit\"\n        >\n          Sign Up\n        </button>\n      </form>\n      <p className=\"App__text-question\"> Already have an account?</p>\n      <button\n        type=\"button\"\n        className=\" App__text-question App__button-link\"\n        onClick={() => goToSignIn()}\n      >\n        Sign In\n      </button>\n    </section>\n  );\n};\n\nSignUp.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  confirmPassword: PropTypes.string.isRequired,\n  hideButton: PropTypes.bool.isRequired,\n  setName: PropTypes.func.isRequired,\n  setEmail: PropTypes.func.isRequired,\n  setPassword: PropTypes.func.isRequired,\n  setConfirmPassword: PropTypes.func.isRequired,\n  setHideButton: PropTypes.func.isRequired,\n  wrongEmail: PropTypes.bool.isRequired,\n  wrongPassword: PropTypes.bool.isRequired,\n  wrongConfirm: PropTypes.bool.isRequired,\n  addUser: PropTypes.func.isRequired,\n  goToSignIn: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\nimport { Eye } from './Eye';\n\nexport const SignIn = ({\n  email,\n  password,\n  hideButton,\n  setEmail,\n  setPassword,\n  setHideButton,\n  wrongEmail,\n  wrongPassword,\n  setWrongEmail,\n  setWrongPassword,\n  noUser,\n  setNoUser,\n  checkUser,\n  goToSignUp,\n}) => {\n  const [typeOfPasword, setTypeOfPasword] = useState('password');\n\n  useEffect(() => {\n    setHideButton(false);\n  }, [email, password, setHideButton]);\n\n  const showPassword = () => {\n    if (typeOfPasword === 'password') {\n      setTypeOfPasword('text');\n    } else {\n      setTypeOfPasword('password');\n    }\n  };\n\n  const clearErrors = () => {\n    setWrongEmail(false);\n    setWrongPassword(false);\n    setNoUser(false);\n    setTypeOfPasword('password');\n    setEmail('');\n    setPassword('12345678');\n    setHideButton(false);\n  };\n\n  return (\n    <section className=\"App__page-signIN\">\n      <h1 className=\"App__header\">Sign In</h1>\n      <form\n        className=\"App__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          checkUser();\n        }}\n      >\n        <label className=\"App__label\">\n          <p className=\"App__label-text\">Email</p>\n          <input\n            className={classNames('App__input', { 'wrong-input': wrongEmail })}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"example@acme.com\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </label>\n        <label className=\"App__label\">\n          <p className=\"App__label-text\">Password</p>\n          <input\n            className={classNames(\n              'App__input',\n              { 'wrong-input': wrongPassword },\n            )}\n            type={typeOfPasword}\n            placeholder=\"********\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n          <Eye\n            typeOfPasword={typeOfPasword}\n            showPassword={showPassword}\n          />\n        </label>\n        <button\n          className={classNames(\n            'App__form-button',\n            { 'not-active': hideButton },\n          )}\n          type=\"submit\"\n        >\n          Sign In\n        </button>\n      </form>\n      <p className=\"App__text-question\"> Don&apos;t have an account yet?</p>\n      <button\n        type=\"button\"\n        className=\" App__text-question App__button-link\"\n        onClick={() => goToSignUp()}\n      >\n        Sign Up\n      </button>\n\n      {noUser && (\n        <div className=\"App__error\">\n          Wrong email or password\n          <span\n            className=\"App__error-close\"\n            onClick={() => clearErrors()}\n            aria-hidden=\"true\"\n          >\n            &#10006;\n          </span>\n        </div>\n      )}\n\n    </section>\n  );\n};\n\nSignIn.propTypes = {\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  hideButton: PropTypes.bool.isRequired,\n  setEmail: PropTypes.func.isRequired,\n  setPassword: PropTypes.func.isRequired,\n  setHideButton: PropTypes.func.isRequired,\n  wrongEmail: PropTypes.bool.isRequired,\n  wrongPassword: PropTypes.bool.isRequired,\n  setWrongEmail: PropTypes.func.isRequired,\n  setWrongPassword: PropTypes.func.isRequired,\n  noUser: PropTypes.bool.isRequired,\n  setNoUser: PropTypes.func.isRequired,\n  checkUser: PropTypes.func.isRequired,\n  goToSignUp: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nexport const Main = () => (\n  <section className=\"App__page-main\">\n    <h1 className=\"App__header\">\n      Hello,\n      {localStorage.getItem('name')}\n      !\n    </h1>\n  </section>\n);\n","import React, { useState } from 'react';\nimport { Enter } from './components/Enter';\nimport { SignUp } from './components/SignUp';\nimport { SignIn } from './components/SignIn';\nimport { Main } from './components/Main';\nimport './App.css';\n\nfunction App() {\n  const [onEnterPage, setOnEnterPage] = useState(true);\n  const [onSignInPage, setOnSignInPage] = useState(false);\n  const [onSignUpPage, setOnSignUpPage] = useState(false);\n  const [onMainPage, setOnMainPage] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('12345678');\n  const [confirmPassword, setConfirmPassword] = useState('12345678');\n  const [wrongEmail, setWrongEmail] = useState(false);\n  const [wrongPassword, setWrongPassword] = useState(false);\n  const [wrongConfirm, setWrongConfirm] = useState(false);\n  const [noUser, setNoUser] = useState(false);\n  const [hideButton, setHideButton] = useState(false);\n\n  const goToSignUp = () => {\n    setOnEnterPage(false);\n    setOnSignInPage(false);\n    setOnMainPage(false);\n    setOnSignUpPage(true);\n  };\n\n  const goToSignIn = () => {\n    setOnSignUpPage(false);\n    setOnEnterPage(false);\n    setOnMainPage(false);\n    setOnSignInPage(true);\n  };\n\n  const goToMain = () => {\n    setOnSignUpPage(false);\n    setOnEnterPage(false);\n    setOnSignInPage(false);\n    setOnMainPage(true);\n  };\n\n  const validEmail = (inputEmail) => {\n    if (inputEmail.includes('@')) {\n      return true;\n    }\n\n    setWrongEmail(true);\n\n    return false;\n  };\n\n  const validPassword = (inputPassword) => {\n    const RegExp = /^(?=.*[!@#$%^&*])(?=.*[A-Z]{2})[a-zA-Z0-9!@#$%^&*]{8,}$/;\n\n    if (RegExp.test(inputPassword)) {\n      return true;\n    }\n\n    setWrongPassword(true);\n\n    return false;\n  };\n\n  const validConfirm = (inputConfirmPassword) => {\n    if (password === inputConfirmPassword) {\n      return true;\n    }\n\n    setWrongConfirm(true);\n\n    return false;\n  };\n\n  const addUser = () => {\n    if (validEmail(email)\n      && validPassword(password)\n      && validConfirm(confirmPassword)\n    ) {\n      window.localStorage.setItem('name', name);\n      window.localStorage.setItem('email', email);\n      window.localStorage.setItem('password', password);\n      goToMain();\n    } else {\n      setHideButton(true);\n    }\n  };\n\n  const wrongUser = () => {\n    setNoUser(true);\n    setWrongEmail(true);\n    setWrongPassword(true);\n  };\n\n  const checkUser = () => {\n    if (validEmail(email) && validPassword(password)) {\n      if (window.localStorage.getItem('email') === email\n        && window.localStorage.getItem('password') === password) {\n        goToMain();\n\n        return;\n      }\n    }\n\n    wrongUser();\n    setHideButton(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {onEnterPage && (\n        <Enter\n          goToSignUp={goToSignUp}\n          goToSignIn={goToSignIn}\n        />\n      )}\n\n      {onSignUpPage && (\n        <SignUp\n          name={name}\n          email={email}\n          password={password}\n          confirmPassword={confirmPassword}\n          hideButton={hideButton}\n          setName={setName}\n          setEmail={setEmail}\n          setPassword={setPassword}\n          setConfirmPassword={setConfirmPassword}\n          setHideButton={setHideButton}\n          wrongEmail={wrongEmail}\n          wrongPassword={wrongPassword}\n          wrongConfirm={wrongConfirm}\n          addUser={addUser}\n          goToSignIn={goToSignIn}\n        />\n      )}\n\n      {onSignInPage && (\n        <SignIn\n          email={email}\n          password={password}\n          hideButton={hideButton}\n          setEmail={setEmail}\n          setPassword={setPassword}\n          setHideButton={setHideButton}\n          wrongEmail={wrongEmail}\n          wrongPassword={wrongPassword}\n          setWrongEmail={setWrongEmail}\n          setWrongPassword={setWrongPassword}\n          noUser={noUser}\n          setNoUser={setNoUser}\n          checkUser={checkUser}\n          goToSignUp={goToSignUp}\n        />\n      )}\n\n      {onMainPage && (\n        <Main />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}